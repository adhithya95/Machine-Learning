# -*- coding: utf-8 -*-
"""diabetes_prediction  SVM.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mAz1Q4Xi9dYiKHCODxAbMqRzlOPQET8L
"""

import numpy as np
import pandas as pd
from sklearn.preprocessing import StandardScaler
from sklearn import svm
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
df = pd.read_csv('/content/diabetes.csv')
df.head()
x = df.drop(columns='Outcome',axis=1)
y = df['Outcome']
scaler = StandardScaler()
scaler.fit(x)
std_x = scaler.transform(x)
x = std_x
x_train,x_test,y_train,y_test= train_test_split(x,y,test_size=0.45)
classifier = svm.SVC(kernel='linear')
classifier.fit(x_train,y_train)
x_pred = classifier.predict(x_train)
acc1 = accuracy_score(x_pred,y_train)
print(acc1)
x_test_pred = classifier.predict(x_test)
acc2 = accuracy_score(x_test_pred,y_test)
print(acc2)
input_data = (6,148,72,35,0,33.6,0.627,50)
input_data_to_nparray = np.asarray(input_data)
reshaped = input_data_to_nparray.reshape(1,-1)
std_data = scaler.transform(reshaped)
result = classifier.predict(std_data)
if(result == 1):
  print("POSITIVE FOR DIABETES")
else:
  print("NEGATIVE")